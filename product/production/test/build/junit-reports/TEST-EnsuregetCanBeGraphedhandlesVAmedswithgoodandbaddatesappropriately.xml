<?xml version="1.0" encoding="UTF-8" ?>
<testsuites>

  <testsuite name="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" errors="0" tests="15" failures="0" time="0.122" timestamp="Wed Nov 15 2017 16:02:14 GMT-0500 (EST)">
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be graphable when outpatient med has both stop dates after start" time="0.006">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be graphable when inpatient med has both stop dates after start" time="0.006">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be graphable when stopped is same as start" time="0.006">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be graphable when overallStop is same as start" time="0.007">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be graphable when both stops are same as start" time="0.015">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be graphable when stopped is undefined and status is active" time="0.006">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be graphable when overallStop is undefined and status is active" time="0.007">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be NOT graphable when both stopped and overallStop are undefined" time="0.006">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be graphable when stopped is before start and status is active" time="0.011">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be graphable when overallStop is before start and status is active" time="0.008">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be graphable when stopped is before start and status is expired" time="0.008">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be NOT graphable when overallStop is before start and status is expired" time="0.007">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be graphable when active, overallStop is before start, and stopped is same as start" time="0.007">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be NOT graphable when stopped is before start and status is discontinued" time="0.007">
        
      </testcase>
    
      <testcase assertions="0" classname="Ensure getCanBeGraphed handles VA meds with good and bad dates appropriately" name="Should be graphable when status is pending - no matter the dates" time="0.007">
        
      </testcase>
    
  </testsuite>

</testsuites>